# -*- coding: utf-8 -*-
"""Heart Disease.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1I1jDl74FgE5xhh0Ai4vW-h5E6lgB-_d9
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from google.colab import files
uploaded = files.upload()

"""**Importing HeartDieases.csv file**"""

data=pd.read_csv("/content/Heart Disease data.csv")
print(data)

data.describe()

data.info()

data.isnull().sum()

data.dropna()

data.columns

"""**Count of number of patients with dieases vs with no diseases**"""

sns.countplot(x="target",data=data)

"""**Pie chart for showing the percentage of patients in male vs female**"""

l=['Male','Female']
explode=(0.1,0)
plt.pie(data['sex'].value_counts(),labels=l,explode=explode,autopct='%.2f ')
plt.show()

"""**Distribution of age of the patients**"""

sns.distplot(data['age'],kde=True)

"""**Correlation graph of all variables**"""

cor=data.corr()
plt.figure(figsize=(14,14))
sns.heatmap(cor,linewidth=1,annot=True,linecolor='black')

"""**Defining dependent variable as y and independent variable as x**"""

X = data.drop('target', axis=1)
y = data['target']

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.fit_transform(X_test)

"""**Support Vector Machine (SVM)**"""

from sklearn.svm import SVC
from sklearn.metrics import confusion_matrix, accuracy_score, precision_score, recall_score, f1_score

"""**Fitting and Predicting the Model**"""

svc =  SVC(C=2)
svc.fit(X_train, y_train)
pred_svm = svc.predict(X_test)

cm_svm=confusion_matrix(y_test,pred_svm)
print("Confusion Matrix   :", cm_svm)
accuracy_svm = accuracy_score(y_test, pred_svm)
print("Accuracy   :", accuracy_svm)
precision_svm = precision_score(y_test, pred_svm)
print("Precision :", precision_svm)
recall_svm = recall_score(y_test, pred_svm)
print("Recall    :", recall_svm)
F1_score_svm = f1_score(y_test, pred_svm)
print("F1-score  :", F1_score_svm)